# Mezmo Integration Routing Configuration
# Optimized routing and batch configurations for different Mezmo pipelines

# Critical Events Pipeline Configuration
[sinks.mezmo_critical_events]
type = "http"
inputs = ["route_logs.critical", "deduplicate_errors", "route_logs.business"]
uri = "https://pipeline.mezmo.com/v1/YOUR_CRITICAL_PIPELINE_ID"
method = "post"
compression = "gzip"

[sinks.mezmo_critical_events.headers]
authorization = "YOUR_CRITICAL_INGESTION_KEY"
content-type = "application/json"
x-vector-source = "restaurant-app"
x-pipeline-type = "critical"

[sinks.mezmo_critical_events.encoding]
codec = "json"
except_fields = ["sampling_metadata", "parsing_metadata"]

# Optimized batching for critical events (smaller batches, faster delivery)
[sinks.mezmo_critical_events.batch]
max_events = 50
timeout_secs = 5
max_bytes = 1048576  # 1MB

# Aggressive retry for critical events
[sinks.mezmo_critical_events.request]
timeout_secs = 15
retry_attempts = 5
retry_initial_backoff_secs = 1
retry_max_duration_secs = 300

# Buffer critical events locally if Mezmo is down
[sinks.mezmo_critical_events.buffer]
type = "disk"
max_size = 268435456  # 256MB
when_full = "block"

# Performance and Metrics Pipeline
[sinks.mezmo_performance]
type = "http"
inputs = ["route_logs.performance", "logs_to_metrics"]
uri = "https://pipeline.mezmo.com/v1/YOUR_PERFORMANCE_PIPELINE_ID"
method = "post"
compression = "gzip"

[sinks.mezmo_performance.headers]
authorization = "YOUR_PERFORMANCE_INGESTION_KEY"
content-type = "application/json"
x-vector-source = "restaurant-app"
x-pipeline-type = "performance"

[sinks.mezmo_performance.encoding]
codec = "json"
except_fields = ["data_quality", "enrichment_latency_ms"]

# Larger batches for performance data
[sinks.mezmo_performance.batch]
max_events = 500
timeout_secs = 30
max_bytes = 5242880  # 5MB

[sinks.mezmo_performance.request]
timeout_secs = 30
retry_attempts = 3
retry_max_duration_secs = 180

# Access Logs Pipeline (High Volume)
[sinks.mezmo_access_logs]
type = "http"
inputs = ["route_logs.access"]
uri = "https://pipeline.mezmo.com/v1/YOUR_ACCESS_PIPELINE_ID"  
method = "post"
compression = "gzip"

[sinks.mezmo_access_logs.headers]
authorization = "YOUR_ACCESS_INGESTION_KEY"
content-type = "application/json"
x-vector-source = "restaurant-app"
x-pipeline-type = "access"

[sinks.mezmo_access_logs.encoding]
codec = "json"
only_fields = ["@timestamp", "method", "url", "status_code", "response_time", "ip_subnet", "trace_id", "user_id", "service", "environment"]

# Large batches for high-volume access logs
[sinks.mezmo_access_logs.batch]
max_events = 1000
timeout_secs = 60
max_bytes = 10485760  # 10MB

[sinks.mezmo_access_logs.request]
timeout_secs = 45
retry_attempts = 2
retry_max_duration_secs = 120

# Business Intelligence Pipeline
[sinks.mezmo_business_intelligence]
type = "http"
inputs = ["route_logs.business"]
uri = "https://pipeline.mezmo.com/v1/YOUR_BUSINESS_PIPELINE_ID"
method = "post"
compression = "gzip"

[sinks.mezmo_business_intelligence.headers]
authorization = "YOUR_BUSINESS_INGESTION_KEY"
content-type = "application/json"
x-vector-source = "restaurant-app"  
x-pipeline-type = "business"

[sinks.mezmo_business_intelligence.encoding]
codec = "json"
except_fields = ["stack", "parsing_metadata", "sampling_metadata"]

# Medium batches for business data
[sinks.mezmo_business_intelligence.batch]
max_events = 200
timeout_secs = 20
max_bytes = 2097152  # 2MB

[sinks.mezmo_business_intelligence.request]
timeout_secs = 25
retry_attempts = 4
retry_max_duration_secs = 240

# Development/Debug Pipeline (Sampled)
[sinks.mezmo_debug]
type = "http"
inputs = ["sample_debug", "route_logs.debug"]
uri = "https://pipeline.mezmo.com/v1/YOUR_DEBUG_PIPELINE_ID"
method = "post"
compression = "gzip"

[sinks.mezmo_debug.headers]
authorization = "YOUR_DEBUG_INGESTION_KEY"
content-type = "application/json"
x-vector-source = "restaurant-app"
x-pipeline-type = "debug"

[sinks.mezmo_debug.encoding]
codec = "json"

# Larger timeout for debug logs (lower priority)
[sinks.mezmo_debug.batch]
max_events = 100
timeout_secs = 120
max_bytes = 1048576  # 1MB

[sinks.mezmo_debug.request]
timeout_secs = 60
retry_attempts = 1
retry_max_duration_secs = 60

# Default catch-all pipeline
[sinks.mezmo_default]
type = "http"
inputs = ["route_logs.default"]
uri = "https://pipeline.mezmo.com/v1/YOUR_DEFAULT_PIPELINE_ID"
method = "post"
compression = "gzip"

[sinks.mezmo_default.headers]
authorization = "YOUR_DEFAULT_INGESTION_KEY"
content-type = "application/json"
x-vector-source = "restaurant-app"
x-pipeline-type = "default"

[sinks.mezmo_default.encoding]
codec = "json"
except_fields = ["enrichment_latency_ms", "data_quality"]

[sinks.mezmo_default.batch]
max_events = 300
timeout_secs = 45
max_bytes = 3145728  # 3MB

[sinks.mezmo_default.request]
timeout_secs = 35
retry_attempts = 2
retry_max_duration_secs = 120

# Health check endpoints for monitoring pipeline status
[sinks.mezmo_health_check]
type = "http"
inputs = ["vector_metrics"]
uri = "https://pipeline.mezmo.com/v1/YOUR_MONITORING_PIPELINE_ID"
method = "post"
compression = "gzip"

[sinks.mezmo_health_check.headers]
authorization = "YOUR_MONITORING_INGESTION_KEY"
content-type = "application/json"
x-vector-source = "restaurant-app"
x-pipeline-type = "monitoring"

[sinks.mezmo_health_check.encoding]
codec = "json"

[sinks.mezmo_health_check.batch]
max_events = 50
timeout_secs = 30

[sinks.mezmo_health_check.request]
timeout_secs = 20
retry_attempts = 1

# Fallback configurations for outage scenarios
[sinks.local_backup_critical]
type = "file"
inputs = ["route_logs.critical", "deduplicate_errors"] 
path = "/tmp/vector/backup/critical-%Y-%m-%d-%H.ndjson"
compression = "gzip"

[sinks.local_backup_critical.encoding]
codec = "ndjson"

[sinks.local_backup_business]
type = "file" 
inputs = ["route_logs.business"]
path = "/tmp/vector/backup/business-%Y-%m-%d-%H.ndjson"
compression = "gzip"

[sinks.local_backup_business.encoding]
codec = "ndjson"

# Backup configuration for vector internal metrics
[sinks.vector_metrics_backup]
type = "file"
inputs = ["vector_metrics"]
path = "/tmp/vector/metrics/vector-metrics-%Y-%m-%d.json"

[sinks.vector_metrics_backup.encoding]
codec = "json"